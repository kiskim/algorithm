1. k 번째 수 k_num.java
	- 범위의 값을 ArrayList로 저장, sort 한 후 필요로 하는번째의 수 저장

	+ Arrays.copyOfRange(target, start, end)를 이용해 간략화

2.  가장 큰 수
	- 시도 한 방법
	  1. Stack에 수를 10으로 나눈 나머지를 저장하는 방식으로 자리 수를 분리
	  2. pop()을 해 가장 앞 자리 수 크기 비교
	  3. 자리수가 다를 경우 두 가지 케이스로 테스트
	  	① 남은 수가 0이 아닌 경우 앞으로
		② 남은 수 가 비교 대상의 가장 첫 자리의 수보다 크면 앞으로
	- 테스트 케이스는 통과했지만 제출은 27/36점으로 실패

	+ String의 비교 특성을 이용한 방법
	+ 두 String을 비교할 때 첫 글자가 같으면 다음 글자로 비교
	+ compare 메소드의 비교 대상을 두 String의 조합을 비교해 정렬
	+ 예외 처리로 가장 큰 수가 0인 경우 "0000" 같은 문자열이 나타날 수 있어
	  첫 문자열의 시작이 '0'인 경우 문자열 "0"을 리턴

3. H-Index